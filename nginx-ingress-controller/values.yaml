nginx-ingress:
  controller:
    ## The name of the Ingress controller daemonset or deployment.
    ## Autogenerated if not set or set to "".
    name: nginx-ingress-controller
    kind: deployment

    image:
      repository:
      tag:
      pullPolicy: IfNotPresent

    ## Deploys the Ingress controller for NGINX Plus.
    nginxplus: true

    ## The log level of the Ingress Controller.
    logLevel: 1

    ## The number of replicas of the Ingress controller deployment.
    replicaCount: 2

    defaultTLS:
      ## The secret with a TLS certificate and key for the default HTTPS server.
      ## The value must follow the following format: `<namespace>/<name>`.
      ## Used as an alternative to specifying a certificate and key using `controller.defaultTLS.cert` and `controller.defaultTLS.key` parameters.
      ## Format: <namespace>/<secret_name>
      secret:

    wildcardTLS:
      ## The secret with a TLS certificate and key for every Ingress host that has TLS enabled but no secret specified.
      ## The value must follow the following format: `<namespace>/<name>`.
      ## Used as an alternative to specifying a certificate and key using `controller.wildcardTLS.cert` and `controller.wildcardTLS.key` parameters.
      ## Format: <namespace>/<secret_name>
      secret:


    config:
      ## The name of the ConfigMap used by the Ingress controller.
      ## Autogenerated if not set or set to "".
      name: nginx-ingress-controller-config

      ## The entries of the ConfigMap for customizing NGINX configuration.
      entries: {}

    ## Add a location based on the value of health-status-uri to the default server. The location responds with the 200 status code for any request.
    ## Useful for external health-checking of the Ingress controller.
    healthStatus: true

    ## Sets the URI of health status location in the default server. Requires controller.healthStatus.
    healthStatusURI: "/healthz"

    ## The node selector for pod assignment for the Ingress controller pods.
    nodeSelector: {}

    ## The tolerations of the Ingress controller pods.
    tolerations: []

    ## A class of the Ingress controller.
    ## For Kubernetes >= 1.18, a corresponding IngressClass resource with the name equal to the class must be deployed. Otherwise,
    ## the Ingress Controller will fail to start.
    ## The Ingress controller only processes resources that belong to its class - i.e. have the "ingressClassName" field resource equal to the class.
    ## The Ingress Controller processes all the VirtualServer/VirtualServerRoute/TransportServer resources that do not have the "ingressClassName" field for all versions of kubernetes.
    ingressClass: nginx

    ## New Ingresses without an ingressClassName field specified will be assigned the class specified in `controller.ingressClass`.
    setAsDefaultIngress: false

    ## Enable TLS Passthrough on port 443. Requires controller.enableCustomResources.
    enableTLSPassthrough: false

    ## Enable custom NGINX configuration snippets in VirtualServer, VirtualServerRoute and TransportServer resources.
    enableSnippets: true

    service:
      ## The type of service to create for the Ingress controller.
      type: NodePort

      ## The name of the service
      ## Autogenerated if not set or set to "".
      name: nginx-ingress-controller

      httpPort:
        ## Enables the HTTP port for the Ingress controller service.
        enable: false

      httpsPort:
        ## Enables the HTTPS port for the Ingress controller service.
        enable: true

        ## The HTTPS port of the Ingress controller service.
        port: 443

        ## The custom NodePort for the HTTPS port. Requires controller.service.type set to NodePort.
        nodePort: "30443"

        ## The HTTPS port on the POD where the Ingress controller service is running.
        targetPort: 443

        ## A list of custom ports to expose through the Ingress controller service. Follows the conventional Kubernetes yaml syntax for service ports.
      customPorts: []

    prometheus:
    ## Expose NGINX or NGINX Plus metrics in the Prometheus format.
    create: true

    ## Configures the port to scrape the metrics.
    port: 9113

    ## Specifies the namespace/name of a Kubernetes TLS Secret which will be used to protect the Prometheus endpoint.
    secret: ""

    ## Configures the HTTP scheme used.
    scheme: http